services:
  logstash:
    build:
      context: logstash/
      args:
        LOGSTASH_OSS_VERSION: $LOGSTASH_OSS_VERSION
    container_name: logstash
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
      - type: bind
        source: ./watcher/logs
        target: /home/watcher/watcher/logs
        read_only: true
      # for containerlab integration
      # - type: bind
      #   source: /home/ubuntu/ospfwatcher_avgur/watcher/logs/
      #   target: /home/watcher/watcher/logs/
      #   read_only: true
    environment:
      ELASTIC_USER_LOGIN: $ELASTIC_USER_LOGIN
      ELASTIC_USER_PASS: $ELASTIC_USER_PASS
      ELASTIC_IP: $ELASTIC_IP
      ELASTIC_PORT: $ELASTIC_PORT
      MONGODB_DATABASE: $MONGODB_DATABASE
      MONGODB_USERNAME: $MONGODB_USERNAME
      MONGODB_PASSWORD: $MONGODB_PASSWORD
      MONGODB_IP: $MONGODB_IP
      MONGODB_PORT: $MONGODB_PORT
      ZABBIX_HOST: $ZABBIX_HOST
      DEBUG_BOOL: $DEBUG_BOOL
      EXPORT_TO_MONGO_BOOL: $EXPORT_TO_MONGO_BOOL
      EXPORT_TO_ELASTICSEARCH_BOOL: $EXPORT_TO_ELASTICSEARCH_BOOL
      EXPORT_TO_ZABBIX_BOOL: $EXPORT_TO_ZABBIX_BOOL
      EXPORT_TO_WEBHOOK_URL_BOOL: $EXPORT_TO_WEBHOOK_URL_BOOL
      WEBHOOK_URL: $WEBHOOK_URL
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600"]
      interval: 5s
      timeout: 10s
      retries: 60
      start_period: 20s
    depends_on:
     - logstash-index-creator
    networks:
      - internal
  
  logstash-index-creator:
    image: vadims06/ospf-watcher:latest
    container_name: logstash-index-creator
    volumes:
      - type: bind
        source: ./logstash/index_template/create.py
        target: /home/watcher/watcher/create.py
        read_only: true
    environment:
      ELASTIC_USER_LOGIN: $ELASTIC_USER_LOGIN
      ELASTIC_USER_PASS: $ELASTIC_USER_PASS
      ELASTIC_IP: $ELASTIC_IP
      ELASTIC_PORT: $ELASTIC_PORT
    entrypoint: ["python", "create.py"]
    networks:
      - internal

networks:
  internal:
    external:
      name: topolograph_backend
