version: '3.2'

services:
  quagga:
    build:
      context: quagga
      dockerfile: Dockerfile
    image: quagga:1.0
    container_name: quagga
    restart: unless-stopped
    environment:
      ospfGreTunnelNetworkWithMask: "172.17.0.0/24" # 172.17.0.0/24
      ospfGreTunnelAreaId: "0.0.0.1" # router ospf\n network 172.17.0.0/24 area 0.0.0.1
    volumes:
      - type: volume
        source: quagga_output
        target: /var/log/quagga
      - type: volume
        source: watcher_output
        target: /home/watcher/watcher/logs
    cap_add:
    - NET_ADMIN
    - SYS_ADMIN
    network_mode: "host"

  watcher:
    build:
      context: watcher
      dockerfile: Dockerfile
    container_name: watcher
    restart: unless-stopped
    environment:
      WATCHER_NAME: "demo-watcher"
      QUAGGA_HOST: "127.0.0.1"
      TOPOLOGRAPH_HOST: $TOPOLOGRAPH_HOST
      TOPOLOGRAPH_PORT: $TOPOLOGRAPH_PORT
      TOPOLOGRAPH_WEB_API_USERNAME_EMAIL: $TOPOLOGRAPH_WEB_API_USERNAME_EMAIL
      TOPOLOGRAPH_WEB_API_PASSWORD: $TOPOLOGRAPH_WEB_API_PASSWORD # do not forget to add IP address to Authorised Network list
      WATCHER_LOGFILE: "/home/watcher/watcher/logs/watcher.log"
      TEST_MODE: $TEST_MODE
    volumes:
      - type: volume
        source: quagga_output
        target: /var/log/quagga
        read_only: true
      - type: volume
        source: watcher_output
        target: /home/watcher/watcher/logs
    network_mode: "host"
    depends_on:
      - logstash

  
  logstash:
    build:
      context: logstash/
      args:
        LOGSTASH_OSS_VERSION: $LOGSTASH_OSS_VERSION
    container_name: logstash
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
      - type: volume
        source: watcher_output
        target: /home/watcher/watcher/logs
        read_only: true
    environment:
      ELASTIC_USER_LOGIN: $ELASTIC_USER_LOGIN
      ELASTIC_USER_PASS: $ELASTIC_USER_PASS
      ELASTIC_IP: $ELASTIC_IP
      ELASTIC_PORT: $ELASTIC_PORT
      MONGODB_DATABASE: $MONGODB_DATABASE
      MONGODB_USERNAME: $MONGODB_USERNAME
      MONGODB_PASSWORD: $MONGODB_PASSWORD
      MONGODB_IP: $MONGODB_IP
      MONGODB_PORT: $MONGODB_PORT
      ZABBIX_HOST: $ZABBIX_HOST
      DEBUG_BOOL: $DEBUG_BOOL
      EXPORT_TO_MONGO_BOOL: $EXPORT_TO_MONGO_BOOL
      EXPORT_TO_ELASTICSEARCH_BOOL: $EXPORT_TO_ELASTICSEARCH_BOOL
      EXPORT_TO_ZABBIX_BOOL: $EXPORT_TO_ZABBIX_BOOL
      EXPORT_TO_WEBHOOK_URL_BOOL: $EXPORT_TO_WEBHOOK_URL_BOOL
      WEBHOOK_URL: $WEBHOOK_URL

    depends_on:
      - logstash-index-creator
    networks:
      - internal
  
  logstash-index-creator:
    image: ospfwatcher_watcher:latest
    container_name: logstash-index-creator
    volumes:
      - type: bind
        source: ./logstash/index_template/create.py
        target: /home/watcher/watcher/create.py
        read_only: true
    environment:
      ELASTIC_USER_LOGIN: $ELASTIC_USER_LOGIN
      ELASTIC_USER_PASS: $ELASTIC_USER_PASS
      ELASTIC_IP: $ELASTIC_IP
      ELASTIC_PORT: $ELASTIC_PORT
    entrypoint: ["python", "create.py"]
    depends_on:
      - quagga
    networks:
      - internal

networks:
  internal:
    external:
      name: topolograph_backend

volumes:
  quagga_output:
    driver: local
  watcher_output:
    driver: local